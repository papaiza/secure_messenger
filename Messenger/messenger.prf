(messenger_prelude
 (emptyfun_TCC1 0
  (emptyfun_TCC1-1 nil 3687710853 ("" (termination-tcc) nil nil) nil
   nil)))
(insert
 (insertLeft_TCC1 0
  (insertLeft_TCC1-1 nil 3687793941 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (A formal-type-decl nil insert nil) (set type-eq-decl nil sets nil)
    (nonempty? const-decl "bool" sets nil)
    (add const-decl "(nonempty?)" sets nil)
    (A2_pred const-decl "[A -> boolean]" insert nil)
    (member const-decl "bool" sets nil))
   nil))
 (insertRight_TCC1 0
  (insertRight_TCC1-1 nil 3687797129 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (A formal-type-decl nil insert nil) (set type-eq-decl nil sets nil)
    (nonempty? const-decl "bool" sets nil)
    (add const-decl "(nonempty?)" sets nil)
    (A2_pred const-decl "[A -> boolean]" insert nil)
    (member const-decl "bool" sets nil))
   nil)))
(message)
(message_reader)
(messenger
 (empty_tuples_are_empty 0
  (empty_tuples_are_empty-1 nil 3687723681
   ("" (then (skeep) (typepred "x2`1") (expand "emptyset") (propax))
    nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (UID nonempty-type-decl nil messenger_prelude nil)
    (set type-eq-decl nil sets nil)
    (emptyset const-decl "set" sets nil)
    (MID nonempty-type-decl nil messenger_prelude nil))
   shostak))
 (msgAccess_TCC1 0
  (msgAccess_TCC1-1 nil 3689156662 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (GID nonempty-type-decl nil messenger_prelude nil)
    (set type-eq-decl nil sets nil)
    (GROUP nonempty-type-decl nil messenger_prelude nil)
    (MID nonempty-type-decl nil messenger_prelude nil)
    (UID nonempty-type-decl nil messenger_prelude nil)
    (MSG_INFO type-eq-decl nil message nil)
    (MSG_STATE type-decl nil messenger_prelude nil)
    (USER nonempty-type-decl nil messenger_prelude nil)
    (STATE type-eq-decl nil messenger nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (msgAccess_TCC2 0
  (msgAccess_TCC2-1 nil 3689156662 ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (GID nonempty-type-decl nil messenger_prelude nil)
    (set type-eq-decl nil sets nil)
    (GROUP nonempty-type-decl nil messenger_prelude nil)
    (MID nonempty-type-decl nil messenger_prelude nil)
    (UID nonempty-type-decl nil messenger_prelude nil)
    (MSG_INFO type-eq-decl nil message nil)
    (MSG_STATE type-decl nil messenger_prelude nil)
    (USER nonempty-type-decl nil messenger_prelude nil)
    (STATE type-eq-decl nil messenger nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (init_state_TCC1 0
  (init_state_TCC1-1 nil 3687710920 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (GID nonempty-type-decl nil messenger_prelude nil)
    (set type-eq-decl nil sets nil)
    (emptyset const-decl "set" sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil))
   nil))
 (init_state_TCC2 0
  (init_state_TCC2-1 nil 3687712544
   ("" (split)
    (("1" (skeep)
      (("1" (typepred "x2")
        (("1" (expand "emptyset") (("1" (propax) nil nil)) nil)) nil))
      nil)
     ("2" (skeep) nil nil))
    nil)
   ((emptyset const-decl "set" sets nil)
    (set type-eq-decl nil sets nil)
    (MID nonempty-type-decl nil messenger_prelude nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   nil))
 (init_state_TCC3 0
  (init_state_TCC3-1 nil 3687714591
   ("" (skeep)
    (("" (typepred "x2`1")
      (("" (expand "emptyset") (("" (propax) nil nil)) nil)) nil))
    nil)
   ((MID nonempty-type-decl nil messenger_prelude nil)
    (emptyset const-decl "set" sets nil)
    (set type-eq-decl nil sets nil)
    (UID nonempty-type-decl nil messenger_prelude nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   nil))
 (init_state_TCC4 0
  (init_state_TCC4-1 nil 3687714591
   ("" (skeep)
    (("" (typepred x2)
      (("" (expand "emptyset") (("" (propax) nil nil)) nil)) nil))
    nil)
   ((emptyset const-decl "set" sets nil)
    (set type-eq-decl nil sets nil)
    (UID nonempty-type-decl nil messenger_prelude nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   nil))
 (add_user_TCC1 0
  (add_user_TCC1-1 nil 3687715035 ("" (subtype-tcc) nil nil) nil nil))
 (add_user_TCC2 0
  (add_user_TCC2-1 nil 3687715035 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (POS_DTIME type-eq-decl nil Time nil)
    (empty? const-decl "bool" sets nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (UID nonempty-type-decl nil messenger_prelude nil)
    (set type-eq-decl nil sets nil)
    (nonempty? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil)
    (add const-decl "(nonempty?)" sets nil))
   nil))
 (add_user_TCC3 0
  (add_user_TCC3-1 nil 3687715035 ("" (subtype-tcc) nil nil)
   ((add const-decl "(nonempty?)" sets nil)) nil))
 (add_user_TCC4 0
  (add_user_TCC4-1 nil 3687715228 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (POS_DTIME type-eq-decl nil Time nil)
    (UID nonempty-type-decl nil messenger_prelude nil)
    (set type-eq-decl nil sets nil)
    (nonempty? const-decl "bool" sets nil))
   nil))
 (add_group_TCC1 0
  (add_group_TCC1-1 nil 3687801039 ("" (subtype-tcc) nil nil)
   ((add const-decl "(nonempty?)" sets nil)) nil))
 (add_group_TCC2 0
  (add_group_TCC2-1 nil 3687801039 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (POS_DTIME type-eq-decl nil Time nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (member const-decl "bool" sets nil)
    (add const-decl "(nonempty?)" sets nil))
   nil))
 (add_group_TCC3 0
  (add_group_TCC3-1 nil 3687801039 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (POS_DTIME type-eq-decl nil Time nil))
   nil))
 (register_user_TCC1 0
  (register_user_TCC1-1 nil 3687720861 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (POS_DTIME type-eq-decl nil Time nil))
   nil))
 (register_user_TCC2 0
  (register_user_TCC2-1 nil 3687720861 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (POS_DTIME type-eq-decl nil Time nil))
   nil))
 (register_user_TCC3 0
  (register_user_TCC3-1 nil 3687720861 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (POS_DTIME type-eq-decl nil Time nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (member const-decl "bool" sets nil)
    (add const-decl "(nonempty?)" sets nil))
   nil))
 (register_user_TCC4 0
  (register_user_TCC4-1 nil 3687720861 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (POS_DTIME type-eq-decl nil Time nil))
   nil))
 (register_user_TCC5 0
  (register_user_TCC5-1 nil 3687720861 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (POS_DTIME type-eq-decl nil Time nil))
   nil))
 (read_message_TCC1 0
  (read_message_TCC1-1 nil 3689064322 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (POS_DTIME type-eq-decl nil Time nil))
   nil))
 (read_message_TCC2 0
  (read_message_TCC2-1 nil 3689064322 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (POS_DTIME type-eq-decl nil Time nil))
   nil))
 (read_message_TCC3 0
  (read_message_TCC3-1 nil 3689064322 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (POS_DTIME type-eq-decl nil Time nil))
   nil))
 (read_message_TCC4 0
  (read_message_TCC4-1 nil 3689064322 ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (POS_DTIME type-eq-decl nil Time nil))
   nil))
 (delete_message_TCC1 0
  (delete_message_TCC1-1 nil 3689063852 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (POS_DTIME type-eq-decl nil Time nil))
   nil))
 (delete_message_TCC2 0
  (delete_message_TCC2-1 nil 3689063852 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (POS_DTIME type-eq-decl nil Time nil)
    (msgOf const-decl "bool" messenger nil))
   nil))
 (delete_message_TCC3 0
  (delete_message_TCC3-1 nil 3689064766
   ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (POS_DTIME type-eq-decl nil Time nil)
    (msgOf const-decl "bool" messenger nil))
   nil))
 (delete_message_TCC4 0
  (delete_message_TCC4-1 nil 3689064766
   ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (POS_DTIME type-eq-decl nil Time nil)
    (msgOf const-decl "bool" messenger nil))
   nil))
 (send_message_TCC1 0
  (send_message_TCC1-1 nil 3689085177 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (POS_DTIME type-eq-decl nil Time nil)
    (set type-eq-decl nil sets nil)
    (UID nonempty-type-decl nil messenger_prelude nil)
    (member const-decl "bool" sets nil))
   nil))
 (send_message_TCC2 0
  (send_message_TCC2-1 nil 3689085177 ("" (subtype-tcc) nil nil)
   ((member const-decl "bool" sets nil)
    (add const-decl "(nonempty?)" sets nil))
   nil))
 (send_message_TCC3 0
  (send_message_TCC3-1 nil 3689085177 ("" (cond-disjoint-tcc) nil nil)
   ((member const-decl "bool" sets nil)
    (/= const-decl "boolean" notequal nil)
    (add const-decl "(nonempty?)" sets nil))
   nil))
 (send_message_TCC4 0
  (send_message_TCC4-1 nil 3689156662 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (POS_DTIME type-eq-decl nil Time nil)
    (set type-eq-decl nil sets nil)
    (UID nonempty-type-decl nil messenger_prelude nil)
    (member const-decl "bool" sets nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (send_message_TCC5 0
  (send_message_TCC5-1 nil 3689156662 ("" (cond-disjoint-tcc) nil nil)
   ((member const-decl "bool" sets nil)
    (add const-decl "(nonempty?)" sets nil))
   nil))
 (send_message_TCC6 0
  (send_message_TCC6-1 nil 3689156662 ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (POS_DTIME type-eq-decl nil Time nil)
    (set type-eq-decl nil sets nil)
    (UID nonempty-type-decl nil messenger_prelude nil)
    (member const-decl "bool" sets nil))
   nil))
 (send_message_TCC7 0
  (send_message_TCC7-1 nil 3689274645 ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (POS_DTIME type-eq-decl nil Time nil)
    (member const-decl "bool" sets nil))
   nil))
 (send_message_TCC8 0
  (send_message_TCC8-1 nil 3689274645 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (POS_DTIME type-eq-decl nil Time nil)
    (member const-decl "bool" sets nil))
   nil))
 (list_new_messages_TCC1 0
  (list_new_messages_TCC1-1 nil 3687802542 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (POS_DTIME type-eq-decl nil Time nil)
    (STATE type-eq-decl nil messenger nil)
    (UID nonempty-type-decl nil messenger_prelude nil)
    (GID nonempty-type-decl nil messenger_prelude nil)
    (set type-eq-decl nil sets nil)
    (GROUP nonempty-type-decl nil messenger_prelude nil)
    (MID nonempty-type-decl nil messenger_prelude nil)
    (MSG_INFO type-eq-decl nil message nil)
    (MSG_STATE type-decl nil messenger_prelude nil)
    (USER nonempty-type-decl nil messenger_prelude nil)
    (msgOf const-decl "bool" messenger nil)
    (DTIME type-eq-decl nil Time nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   nil))
 (list_new_messages_TCC2 0
  (list_new_messages_TCC2-1 nil 3689064766
   ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (POS_DTIME type-eq-decl nil Time nil))
   nil))
 (messenger_ft_TCC1 0
  (messenger_ft_TCC1-1 nil 3687803263 ("" (cond-disjoint-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (DTIME type-eq-decl nil Time nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (messenger_ft_TCC2 0
  (messenger_ft_TCC2-1 nil 3687803263 ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (DTIME type-eq-decl nil Time nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (messenger_ft_TCC3 0
  (messenger_ft_TCC3-1 nil 3687807153 ("" (cond-coverage-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (DTIME type-eq-decl nil Time nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (list_message_privacy_TCC1 0
  (list_message_privacy_TCC1-1 nil 3687804255
   ("" (subtype-tcc) nil nil) nil nil))
 (show_message_privacy_TCC1 0
  (show_message_privacy_TCC1-1 nil 3687805015
   ("" (subtype-tcc) nil nil) nil nil))
 (show_message_privacy_TCC2 0
  (show_message_privacy_TCC2-1 nil 3687805015
   ("" (subtype-tcc) nil nil) ((msgOf const-decl "bool" messenger nil))
   nil))
 (privacy_weak 0
  (privacy_weak-1 nil 3687807759 ("" (grind) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (DTIME type-eq-decl nil Time nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (add_user const-decl "bool" messenger nil)
    (add_group const-decl "bool" messenger nil)
    (register_user const-decl "bool" messenger nil)
    (send_message const-decl "bool" messenger nil)
    (read_message const-decl "bool" messenger nil)
    (delete_message const-decl "bool" messenger nil)
    (list_new_messages const-decl "bool" messenger nil)
    (list_old_messages const-decl "bool" messenger nil)
    (extend const-decl "R" extend nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (POS_DTIME type-eq-decl nil Time nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (u shared-adt-accessor-decl "[{x: command |
              add_user?(x) OR register_user?(x) OR send_message?(x)
           OR read_message?(x) OR delete_message?(x) OR list_new_message?(x)
           OR list_old_message?(x)} ->
   UID]" messenger nil)
    (list_old_message? adt-recognizer-decl "[command -> boolean]"
     messenger nil)
    (list_new_message? adt-recognizer-decl "[command -> boolean]"
     messenger nil)
    (delete_message? adt-recognizer-decl "[command -> boolean]"
     messenger nil)
    (read_message? adt-recognizer-decl "[command -> boolean]" messenger
     nil)
    (send_message? adt-recognizer-decl "[command -> boolean]" messenger
     nil)
    (register_user? adt-recognizer-decl "[command -> boolean]"
     messenger nil)
    (add_user? adt-recognizer-decl "[command -> boolean]" messenger
     nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (command type-decl nil messenger nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (STATE type-eq-decl nil messenger nil)
    (USER nonempty-type-decl nil messenger_prelude nil)
    (MSG_STATE type-decl nil messenger_prelude nil)
    (MSG_INFO type-eq-decl nil message nil)
    (MID nonempty-type-decl nil messenger_prelude nil)
    (GROUP nonempty-type-decl nil messenger_prelude nil)
    (set type-eq-decl nil sets nil)
    (GID nonempty-type-decl nil messenger_prelude nil)
    (UID nonempty-type-decl nil messenger_prelude nil)
    (init_state const-decl "STATE" messenger nil)
    (messenger_ft const-decl "bool" messenger nil)
    (/= const-decl "boolean" notequal nil)
    (member const-decl "bool" sets nil)
    (msgOf const-decl "bool" messenger nil)
    (subset? const-decl "bool" sets nil)
    (list_message_privacy const-decl "bool" messenger nil)
    (show_message_privacy const-decl "bool" messenger nil))
   shostak))
 (privacy 0
  (privacy-1 nil 3687805084
   (""
    (then (skeep)
     (spread (induct i)
      ((then (inst -1 0) (grind)) (then (inst -1 0) (grind))
       (then (skeep) (inst -3 "j+1") (grind)))))
    nil nil)
   ((int_minus_int_is_int application-judgement "int" integers nil)
    (list_old_messages const-decl "bool" messenger nil)
    (list_new_messages const-decl "bool" messenger nil)
    (delete_message const-decl "bool" messenger nil)
    (read_message const-decl "bool" messenger nil)
    (send_message const-decl "bool" messenger nil)
    (register_user const-decl "bool" messenger nil)
    (add_group const-decl "bool" messenger nil)
    (add_user const-decl "bool" messenger nil)
    (show_msg? adt-recognizer-decl "[OUTPUT -> boolean]" messenger nil)
    (msg adt-accessor-decl "[(show_msg?) -> MID]" messenger nil)
    (POS_DTIME type-eq-decl nil Time nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (m shared-adt-accessor-decl
     "[{x: command | read_message?(x) OR delete_message?(x)} -> MID]"
     messenger nil)
    (delete_message? adt-recognizer-decl "[command -> boolean]"
     messenger nil)
    (read_message? adt-recognizer-decl "[command -> boolean]" messenger
     nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (command type-decl nil messenger nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (extend const-decl "R" extend nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (messenger_ft const-decl "bool" messenger nil)
    (init_state const-decl "STATE" messenger nil)
    (subset? const-decl "bool" sets nil)
    (msgOf const-decl "bool" messenger nil)
    (member const-decl "bool" sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (show_message_privacy const-decl "bool" messenger nil)
    (list_message_privacy const-decl "bool" messenger nil)
    (OUTPUT type-decl nil messenger nil)
    (STATE type-eq-decl nil messenger nil)
    (USER nonempty-type-decl nil messenger_prelude nil)
    (MSG_STATE type-decl nil messenger_prelude nil)
    (MSG_INFO type-eq-decl nil message nil)
    (UID nonempty-type-decl nil messenger_prelude nil)
    (MID nonempty-type-decl nil messenger_prelude nil)
    (GROUP nonempty-type-decl nil messenger_prelude nil)
    (set type-eq-decl nil sets nil)
    (GID nonempty-type-decl nil messenger_prelude nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (DTIME type-eq-decl nil Time nil)
    (delta const-decl "posreal" messenger nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (pred type-eq-decl nil defined_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   shostak))
 (inv1_send_TCC1 0
  (inv1_send_TCC1-1 nil 3689008741 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (DTIME type-eq-decl nil Time nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (member const-decl "bool" sets nil)
    (send_message const-decl "bool" messenger nil))
   nil))
 (inv1_send 0
  (inv1_send-1 nil 3689008749
   ("" (skeep)
    (("" (expand "send_message")
      (("" (split -1)
        (("1" (flatten)
          (("1" (skeep -4)
            (("1" (replace -4 2)
              (("1" (expand "inv1")
                (("1" (skeep) (("1" (postpone) nil nil)) nil)) nil))
              nil))
            nil))
          nil)
         ("2" (postpone) nil nil))
        nil))
      nil))
    nil)
   nil shostak))
 (inv2_send 0
  (inv2_send-1 nil 3689096997
   ("" (induct i)
    (("1" (skeep) (("1" (grind) nil nil)) nil)
     ("2" (skeep)
      (("2" (grind)
        (("1" (postpone) nil nil) ("2" (postpone) nil nil)
         ("3" (postpone) nil nil) ("4" (postpone) nil nil)
         ("5" (postpone) nil nil) ("6" (postpone) nil nil)
         ("7" (postpone) nil nil) ("8" (postpone) nil nil)
         ("9" (postpone) nil nil) ("10" (postpone) nil nil)
         ("11" (postpone) nil nil) ("12" (postpone) nil nil)
         ("13" (postpone) nil nil) ("14" (postpone) nil nil))
        nil))
      nil)
     ("3" (postpone) nil nil))
    nil)
   nil shostak))
 (inv1_read_TCC1 0
  (inv1_read_TCC1-1 nil 3689008741 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (DTIME type-eq-decl nil Time nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (inv1_read 0
  (inv1_read-1 nil 3689062174
   ("" (skeep)
    (("" (expand "inv1")
      (("" (expand "read_message")
        (("" (assert)
          (("" (skeep)
            (("" (inst - "u!2" "m!2")
              (("1" (grind) nil nil) ("2" (grind) nil nil)
               ("3" (grind) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((inv1 const-decl "bool" messenger nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (u!2 skolem-const-decl "(st(i)`users)" messenger nil)
    (i skolem-const-decl "DTIME[delta]" messenger nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (st skolem-const-decl "[DTIME[delta] -> STATE]" messenger nil)
    (STATE type-eq-decl nil messenger nil)
    (USER nonempty-type-decl nil messenger_prelude nil)
    (MSG_STATE type-decl nil messenger_prelude nil)
    (MSG_INFO type-eq-decl nil message nil)
    (UID nonempty-type-decl nil messenger_prelude nil)
    (MID nonempty-type-decl nil messenger_prelude nil)
    (GROUP nonempty-type-decl nil messenger_prelude nil)
    (set type-eq-decl nil sets nil)
    (GID nonempty-type-decl nil messenger_prelude nil)
    (DTIME type-eq-decl nil Time nil)
    (delta const-decl "posreal" messenger nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (m!2 skolem-const-decl "(st(i)`msgs)" messenger nil)
    (/= const-decl "boolean" notequal nil)
    (readership const-decl "bool" message_reader nil)
    (read_message const-decl "bool" messenger nil))
   shostak))
 (inv2_read 0
  (inv2_read-1 nil 3689149980
   ("" (skeep)
    (("" (expand "inv2")
      (("" (expand "read_message")
        (("" (skeep)
          (("" (inst - "m!2")
            (("1" (grind) nil nil) ("2" (grind) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((inv2 const-decl "bool" messenger nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (DTIME type-eq-decl nil Time nil)
    (GID nonempty-type-decl nil messenger_prelude nil)
    (set type-eq-decl nil sets nil)
    (GROUP nonempty-type-decl nil messenger_prelude nil)
    (MID nonempty-type-decl nil messenger_prelude nil)
    (UID nonempty-type-decl nil messenger_prelude nil)
    (MSG_INFO type-eq-decl nil message nil)
    (MSG_STATE type-decl nil messenger_prelude nil)
    (USER nonempty-type-decl nil messenger_prelude nil)
    (STATE type-eq-decl nil messenger nil)
    (st skolem-const-decl "[DTIME[delta] -> STATE]" messenger nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (i skolem-const-decl "DTIME[delta]" messenger nil)
    (m!2 skolem-const-decl "(st(i)`msgs)" messenger nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (read_message const-decl "bool" messenger nil))
   shostak))
 (inv1_holds 0
  (inv1_holds-1 nil 3689002351
   ("" (skeep)
    (("" (induct i)
      (("1" (inst -1 0) (("1" (grind) nil nil)) nil)
       ("2" (skeep)
        (("2" (inst -2 "j+1") (("2" (postpone) nil nil)) nil)) nil))
      nil))
    nil)
   nil shostak)))
(use_cases
 (uc1_state_0 0
  (uc1_state_0-1 nil 3688398842
   ("" (then (expand "use_case1") (flatten) (inst -2 1) (grind))
    (("" (propax) nil)) nil)
   ((use_case1 const-decl "bool" use_cases nil)
    (messenger_ft const-decl "bool" messenger nil)
    (init_state const-decl "STATE" messenger nil)
    (post_st6 const-decl "bool" use_cases nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (DTIME type-eq-decl nil Time nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (emptyset const-decl "set" sets nil))
   shostak))
 (uc1_state_1 0
  (uc1_state_1-1 nil 3688398842
   (""
    (then (flatten) (lemma "uc1_state_0")
     (spread (split -1)
      ((then (expand "use_case1") (flatten) (inst -2 1) (grind))
       (propax))))
    nil nil)
   ((add const-decl "(nonempty?)" sets nil)
    (add_user const-decl "bool" messenger nil)
    (messenger_ft const-decl "bool" messenger nil)
    (post_st6 const-decl "bool" use_cases nil)
    (member const-decl "bool" sets nil)
    (insertLeft const-decl "Z" insert nil)
    (DTIME type-eq-decl nil Time nil)
    (delta const-decl "posreal" messenger nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (use_case1 const-decl "bool" use_cases nil)
    (uc1_state_0 formula-decl nil use_cases nil))
   shostak))
 (uc1_state_2 0
  (uc1_state_2-1 nil 3688398842
   (""
    (then (flatten) (lemma "uc1_state_1")
     (spread (split -1)
      ((then (expand "use_case1") (flatten) (inst -3 2) (grind))
       (propax))))
    nil nil)
   ((add const-decl "(nonempty?)" sets nil)
    (add_group const-decl "bool" messenger nil)
    (messenger_ft const-decl "bool" messenger nil)
    (post_st6 const-decl "bool" use_cases nil)
    (insertRight const-decl "Z" insert nil)
    (DTIME type-eq-decl nil Time nil)
    (delta const-decl "posreal" messenger nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (use_case1 const-decl "bool" use_cases nil)
    (uc1_state_1 formula-decl nil use_cases nil))
   shostak))
 (uc1_state_3 0
  (uc1_state_3-1 nil 3688398842
   (""
    (then (flatten) (lemma "uc1_state_2")
     (spread (split -1)
      ((then (expand "use_case1") (flatten) (inst -4 3)
        (lemma "distinct_users") (grind))
       (propax))))
    nil nil)
   ((distinct_users formula-decl nil use_cases nil)
    (member const-decl "bool" sets nil)
    (/= const-decl "boolean" notequal nil)
    (post_st6 const-decl "bool" use_cases nil)
    (messenger_ft const-decl "bool" messenger nil)
    (register_user const-decl "bool" messenger nil)
    (add const-decl "(nonempty?)" sets nil)
    (DTIME type-eq-decl nil Time nil)
    (delta const-decl "posreal" messenger nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (use_case1 const-decl "bool" use_cases nil)
    (uc1_state_2 formula-decl nil use_cases nil))
   shostak))
 (uc1_state_4 0
  (uc1_state_4-1 nil 3688398842
   (""
    (then (flatten) (lemma "uc1_state_3")
     (spread (split -1)
      ((then (expand "use_case1") (flatten) (inst -5 4) (grind))
       (propax))))
    nil nil)
   ((add const-decl "(nonempty?)" sets nil)
    (MID nonempty-type-decl nil messenger_prelude nil)
    (send_message const-decl "bool" messenger nil)
    (empty? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil)
    (msgOf const-decl "bool" messenger nil)
    (messenger_ft const-decl "bool" messenger nil)
    (post_st6 const-decl "bool" use_cases nil)
    (DTIME type-eq-decl nil Time nil)
    (delta const-decl "posreal" messenger nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (use_case1 const-decl "bool" use_cases nil)
    (uc1_state_3 formula-decl nil use_cases nil))
   shostak))
 (uc1_state_5 0
  (uc1_state_5-1 nil 3688398842
   (""
    (then (flatten) (lemma "uc1_state_4")
     (spread (split -1)
      ((then (expand "use_case1") (flatten) (inst -5 5) (grind))
       (propax))))
    nil nil)
   ((post_st6 const-decl "bool" use_cases nil)
    (msgOf const-decl "bool" messenger nil)
    (member const-decl "bool" sets nil)
    (empty? const-decl "bool" sets nil)
    (messenger_ft const-decl "bool" messenger nil)
    (add_user const-decl "bool" messenger nil)
    (insertLeft const-decl "Z" insert nil)
    (add const-decl "(nonempty?)" sets nil)
    (DTIME type-eq-decl nil Time nil)
    (delta const-decl "posreal" messenger nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (use_case1 const-decl "bool" use_cases nil)
    (uc1_state_4 formula-decl nil use_cases nil))
   shostak))
 (uc1_state_6 0
  (uc1_state_6-1 nil 3688398406
   (""
    (then (flatten) (lemma "uc1_state_5")
     (spread (split -1)
      ((then (expand "use_case1") (flatten) (inst -2 6) (grind))
       (propax))))
    nil nil)
   ((send_message const-decl "bool" messenger nil)
    (member const-decl "bool" sets nil)
    (messenger_ft const-decl "bool" messenger nil)
    (post_st6 const-decl "bool" use_cases nil)
    (DTIME type-eq-decl nil Time nil)
    (delta const-decl "posreal" messenger nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (use_case1 const-decl "bool" use_cases nil)
    (uc1_state_5 formula-decl nil use_cases nil))
   shostak))
 (use_case1_correct 0
  (use_case1_correct-1 nil 3688398374
   ("" (then (lemma "uc1_state_4") (lemma "uc1_state_6") (grind)) nil
    nil)
   ((uc1_state_4 formula-decl nil use_cases nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (delta const-decl "posreal" messenger nil)
    (DTIME type-eq-decl nil Time nil)
    (send_message const-decl "bool" messenger nil)
    (UID nonempty-type-decl nil messenger_prelude nil)
    (GID nonempty-type-decl nil messenger_prelude nil)
    (set type-eq-decl nil sets nil)
    (GROUP nonempty-type-decl nil messenger_prelude nil)
    (MID nonempty-type-decl nil messenger_prelude nil)
    (MSG_INFO type-eq-decl nil message nil)
    (MSG_STATE type-decl nil messenger_prelude nil)
    (USER nonempty-type-decl nil messenger_prelude nil)
    (STATE type-eq-decl nil messenger nil)
    (st const-decl "[DTIME -> STATE]" use_cases nil)
    (u1 const-decl "UID" use_cases nil)
    (init_state const-decl "STATE" messenger nil)
    (messenger_ft const-decl "bool" messenger nil)
    (use_case1 const-decl "bool" use_cases nil)
    (post_st6 const-decl "bool" use_cases nil)
    (msgOf const-decl "bool" messenger nil)
    (member const-decl "bool" sets nil)
    (empty? const-decl "bool" sets nil)
    (uc1_state_6 formula-decl nil use_cases nil))
   shostak)))

